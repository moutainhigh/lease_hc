
package common.test;

import com.github.pagehelper.PageInfo;
import com.google.common.collect.Maps;
import com.hc.lease.baseInfo.model.LeaseDealer;
import com.hc.lease.baseInfo.model.LeaseRule;
import com.hc.lease.baseInfo.service.*;
import com.hc.lease.common.core.constant.RuleType;
import com.hc.lease.common.core.exception.GMException;
import com.hc.lease.common.core.file.UploadService;
import org.apache.commons.fileupload.FileUploadBase;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class MyTest {

    public static void main(String[] args) throws GMException, IOException, FileUploadBase.FileSizeLimitExceededException {
        ApplicationContext context = new ClassPathXmlApplicationContext(new String[]{"META-INF/spring/*.xml"});

   /*     LeaseCarBrandsService leaseCarBrandsService = (LeaseCarBrandsService) context.getBean("leaseCarBrandsService");

        LeaseCarSeriesService leaseCarSeriesService = (LeaseCarSeriesService) context.getBean("leaseCarSeriesService");

        LeaseContractBaseinfoService leaseContractBaseinfoService = (LeaseContractBaseinfoService) context.getBean("leaseContractBaseinfoService");

        LeaseAreaService leaseAreaService = (LeaseAreaService) context.getBean("leaseAreaService");*/

        UploadService uploadService = (UploadService) context.getBean("uploadService");

 /*       LeaseCarModelColorService leaseCarModelColorService = (LeaseCarModelColorService) context.getBean("leaseCarModelColorService");

        LeaseCarModelService leaseCarModelService = (LeaseCarModelService) context.getBean("leaseCarModelService");

        LeaseCarColorService leaseCarColorService = (LeaseCarColorService) context.getBean("leaseCarColorService");

        LeaseDealerService leaseDealerService = (LeaseDealerService) context.getBean("leaseDealerService");

        LeaseRuleService leaseRuleService = (LeaseRuleService) context.getBean("leaseRuleService");
*/

       /* List<Long> ids = new ArrayList<Long>();
        ids.add(2l);
        //leaseCarSeriesService.findByBrandsId(ids);
        leaseCarModelService.findBySeriesId(ids);*/

        //leaseContractBaseinfoService.findPage(1,3,null);

        /*
        Map<String, Object> paramsMap = Maps.newHashMap();
        paramsMap.put("ruleType", RuleType.TYPE_DEFAULTINTEREST);
        List<LeaseRule> leaseRuleList = leaseRuleService.findAll(paramsMap);
        */

        /*
        LeaseDealerService leaseDealerService = (LeaseDealerService) context.getBean("leaseDealerService");
        List<Long> ids = new ArrayList<Long>();
        ids.add(1l);
        ids.add(2l);
        leaseDealerService.deleteBatchById(ids);
        */

        /*
        leaseDealerService.findPage(1,2,null);
        */

        /*
        LeaseCarColor leaseCarColor = new LeaseCarColor();
        leaseCarColor.setName("棕色");
        leaseCarColorService.insertSelective(leaseCarColor);
        */

        //leaseCarModelService.findPage(1, 5, null);
        //leaseCarModelService.selectById(1l);


        /*
        Map<String, Object> paramsMap = Maps.newHashMap();
        paramsMap.put("grade", 1);
        PageInfo<LeaseDealer> page = leaseDealerService.findPage(1, 5, paramsMap);
        */


        /*
        Map<String, Object> paramsMap = new HashMap<String, Object>();
        paramsMap.put("isEnable", true);
        //paramsMap.put("model", AreaModel.MODEL_DEALER);
        leaseAreaService.findAreaByEnableAndModel(paramsMap);
        //leaseAreaService.findAll(paramsMap);
        */

        /*
        Map<String, Object> leaseCarModelMap = leaseCarModelService.selectById(26l);
        LeaseCarModel leaseCarModel = ConvertMap2Obj.toBean(LeaseCarModel.class, leaseCarModelMap);
        */

        /*
        leaseCarModelColorService.insert(new LeaseCarModelColor(1l, 1l, new BigDecimal(1000)));
        */

        //leaseCarBrandsService.findPage(1,2,null);
        //leaseCarBrandsService.selectByPrimaryKey(1l);

        /*

        //内容
        StringBuilder builder = new StringBuilder();
        builder.append("<html><body>你好！<br />");
        builder.append("&nbsp&nbsp&nbsp&nbsp附件是个人清单。<br />");
        builder.append("&nbsp&nbsp&nbsp&nbsp其中人信息；<br />");
        builder.append("</body></html>");
        EmailService emailService = (EmailService) context.getBean("emailService");
        emailService.emailManage("1392125517@qq.com", builder, "test");
*/

        /*
        System.out.println(leaseContractBaseinfoService.findPage(1, 1,null));
        */

        /*
        LeaseContractBaseinfo leaseContractBaseinfo = new LeaseContractBaseinfo();
        List<ContractPartyContactAddressVo> contractPartyContactAddressVoList = new ArrayList<ContractPartyContactAddressVo>();
        contractPartyContactAddressVoList.add(new ContractPartyContactAddressVo("广州天河区", "543100", 0));
        contractPartyContactAddressVoList.add(new ContractPartyContactAddressVo("广州白云区", "543101", 1));
        leaseContractBaseinfo.setContractPartyContactAddressVoList(contractPartyContactAddressVoList);
        int row = leaseContractBaseinfoService.insertSelective(leaseContractBaseinfo);
        */

        /*
        leaseAreaService.findPage(1, 2, null);
        */



       String filePath= uploadService.base64UploadFile("", null);

        System.out.print("*******************************************************************"+filePath);

    }
}
