<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.supplier.dao.LeaseCarDictAccessoryMapper" >
  <resultMap id="BaseResultMap" type="com.hc.lease.supplier.model.LeaseCarDictAccessory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="dict_id" property="dictId" jdbcType="BIGINT" />
    <result column="car_id" property="carId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, dict_id, car_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lease_car_dict_accessory
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findPage" resultType="java.util.Map">
    select
     id, dict_id as "dictId", car_id as "carId"
    from lease_car_dict_accessory
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lease_car_dict_accessory
  </select>

  <select id="insertViewParames" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from lease_car_dict_accessory
  </select>


  <delete id="deleteBatchById" parameterType="long">
    delete from lease_car_dict_accessory where id in
    <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
<delete id="deleteByCarId" parameterType="long">
   delete from lease_car_dict_accessory
   where car_id=#{id,jdbcType=BIGINT}
</delete>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lease_car_dict_accessory
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hc.lease.supplier.model.LeaseCarDictAccessory" >
    insert into lease_car_dict_accessory (id, dict_id, car_id
      )
    values (#{id,jdbcType=BIGINT}, #{dictId,jdbcType=BIGINT}, #{carId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hc.lease.supplier.model.LeaseCarDictAccessory" >
    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_car_dict_accessory_id_seq'::regclass) as id
    </selectKey>

    insert into lease_car_dict_accessory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="dictId != null" >
        dict_id,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dictId != null" >
        #{dictId,jdbcType=BIGINT},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.supplier.model.LeaseCarDictAccessory" >
    update lease_car_dict_accessory
    <set >
      <if test="dictId != null" >
        dict_id = #{dictId,jdbcType=BIGINT},
      </if>
      <if test="carId != null" >
        car_id = #{carId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hc.lease.supplier.model.LeaseCarDictAccessory" >
    update lease_car_dict_accessory
    set dict_id = #{schemeId,jdbcType=BIGINT},
      car_id = #{carId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>