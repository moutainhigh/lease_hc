<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.order.dao.LeaseContractIncomeExpeMapper">
    <!-- 贷后车辆管理-收入和支出 -->
    <resultMap id="BaseResultMap" type="com.hc.lease.order.model.LeaseContractIncomeExpe">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="contract_id" property="contractId" jdbcType="BIGINT"/>
        <result column="car_id" property="carId" jdbcType="BIGINT"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="NUMERIC"/>
        <result column="source" property="source" jdbcType="INTEGER"/>
        <result column="source_id" property="sourceId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, contract_id, car_id, type, name, price, source, source_id, create_time, update_time, create_by,
    update_by
  </sql>

    <select id="findByContractIdAndSource" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from lease_contract_income_expe
        where
        contract_id = #{contractId,jdbcType=BIGINT}
        and source = #{source,jdbcType=INTEGER}
        and source_id = #{sourceId,jdbcType=BIGINT}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from lease_contract_income_expe
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from lease_contract_income_expe
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <delete id="deleteByContractId">
    delete from lease_contract_income_expe
    where
    contract_id = #{contractId,jdbcType=BIGINT}
    and source = #{source,jdbcType=INTEGER}
    and source_id = #{sourceId,jdbcType=BIGINT}
  </delete>

    <insert id="insertList" parameterType="java.util.List">

        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into lease_contract_income_expe (contract_id, car_id, type, name, price, source, source_id, create_time,
            update_time, create_by, update_by)
            values
            (
            #{item.contractId},#{item.carId},#{item.type},#{item.name},#{item.price},#{item.source},#{item.sourceId},now(),now(),#{item.createBy},#{item.updateBy}
            )
        </foreach>

    </insert>

    <insert id="insert" parameterType="com.hc.lease.order.model.LeaseContractIncomeExpe">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_contract_income_expe_id_seq'::regclass) as id
        </selectKey>
        insert into lease_contract_income_expe (id, contract_id, car_id,
        type, name, price,
        source, source_id, create_time, update_time,
        create_by, update_by)
        values (#{id,jdbcType=BIGINT}, #{contractId,jdbcType=BIGINT}, #{carId,jdbcType=BIGINT},
        #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=NUMERIC},
        #{source,jdbcType=INTEGER}, #{sourceId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.hc.lease.order.model.LeaseContractIncomeExpe">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_contract_income_expe_id_seq'::regclass) as id
        </selectKey>
        insert into lease_contract_income_expe
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="contractId != null">
                contract_id,
            </if>
            <if test="carId != null">
                car_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="sourceId != null">
                sourceId,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=BIGINT},
            </if>
            <if test="carId != null">
                #{carId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=NUMERIC},
            </if>
            <if test="source != null">
                #{source,jdbcType=INTEGER},
            </if>
            <if test="sourceId != null">
                #{sourceId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.order.model.LeaseContractIncomeExpe">
        update lease_contract_income_expe
        <set>
            <if test="contractId != null">
                contract_id = #{contractId,jdbcType=BIGINT},
            </if>
            <if test="carId != null">
                car_id = #{carId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=NUMERIC},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=INTEGER},
            </if>
            <if test="sourceId != null">
                source_id = #{sourceId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.hc.lease.order.model.LeaseContractIncomeExpe">
    update lease_contract_income_expe
    set contract_id = #{contractId,jdbcType=BIGINT},
      car_id = #{carId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=NUMERIC},
      source = #{source,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>