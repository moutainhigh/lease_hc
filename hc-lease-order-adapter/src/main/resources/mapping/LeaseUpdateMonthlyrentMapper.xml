<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.order.dao.LeaseUpdateMonthlyrentMapper" >
  <resultMap id="BaseResultMap" type="com.hc.lease.order.model.LeaseUpdateMonthlyrent" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="contract_id" property="contractId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="new_monthlyrent" property="newMonthlyrent" jdbcType="NUMERIC" />
    <result column="old_monthlyrent" property="oldMonthlyrent" jdbcType="NUMERIC" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, contract_id, user_id, new_monthlyrent, old_monthlyrent, create_time, update_time, 
    create_by, update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lease_update_monthlyrent
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lease_update_monthlyrent
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hc.lease.order.model.LeaseUpdateMonthlyrent" >
    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_update_monthlyrent_id_seq'::regclass) as id
    </selectKey>
    insert into lease_update_monthlyrent (id, contract_id, user_id, 
      new_monthlyrent, old_monthlyrent, create_time, 
      update_time, create_by, update_by
      )
    values (#{id,jdbcType=BIGINT}, #{contractId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{newMonthlyrent,jdbcType=NUMERIC}, #{oldMonthlyrent,jdbcType=NUMERIC}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hc.lease.order.model.LeaseUpdateMonthlyrent" >
    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_update_monthlyrent_id_seq'::regclass) as id
    </selectKey>
    insert into lease_update_monthlyrent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="newMonthlyrent != null" >
        new_monthlyrent,
      </if>
      <if test="oldMonthlyrent != null" >
        old_monthlyrent,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="newMonthlyrent != null" >
        #{newMonthlyrent,jdbcType=NUMERIC},
      </if>
      <if test="oldMonthlyrent != null" >
        #{oldMonthlyrent,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.order.model.LeaseUpdateMonthlyrent" >
    update lease_update_monthlyrent
    <set >
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="newMonthlyrent != null" >
        new_monthlyrent = #{newMonthlyrent,jdbcType=NUMERIC},
      </if>
      <if test="oldMonthlyrent != null" >
        old_monthlyrent = #{oldMonthlyrent,jdbcType=NUMERIC},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hc.lease.order.model.LeaseUpdateMonthlyrent" >
    update lease_update_monthlyrent
    set contract_id = #{contractId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      new_monthlyrent = #{newMonthlyrent,jdbcType=NUMERIC},
      old_monthlyrent = #{oldMonthlyrent,jdbcType=NUMERIC},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>