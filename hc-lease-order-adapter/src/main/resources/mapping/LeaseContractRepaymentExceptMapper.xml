<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.order.dao.LeaseContractRepaymentExceptMapper" >
  <!--融租合同 不用系统处理扣款的月租、滞纳金,录入的合同数据如果是不需要系统处理租金扣款，则记录，因为有些合同数据是线下处理了收款-->
  <resultMap id="BaseResultMap" type="com.hc.lease.order.model.LeaseContractRepaymentExcept" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="contract_id" property="contractId" jdbcType="BIGINT" />
    <result column="repayment_id" property="repaymentId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER"/>
  </resultMap>

  <sql id="Base_Column_List" >
    id, contract_id, repayment_id, create_time, update_time, create_by, update_by, type
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lease_contract_repayment_except
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lease_contract_repayment_except
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.hc.lease.order.model.LeaseContractRepaymentExcept" >

    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_contract_repayment_except_id_seq'::regclass) as id
    </selectKey>

    insert into lease_contract_repayment_except (id, contract_id, repayment_id, 
      create_time, update_time, create_by, 
      update_by, type)
    values (
      #{id,jdbcType=BIGINT}, #{contractId,jdbcType=BIGINT}, #{repaymentId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}
    )
  </insert>

  <!--批量插入-->
  <insert id="insertList">

    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      insert into lease_contract_repayment_except (contract_id, repayment_id, create_time, update_time, create_by, update_by, type)
      values
      (
        #{item.contractId}, #{item.repaymentId}, #{item.createTime}, #{item.updateTime}, #{item.createBy}, #{item.updateBy}, #{item.type}
      )
    </foreach>

  </insert>

  <insert id="insertSelective" parameterType="com.hc.lease.order.model.LeaseContractRepaymentExcept" >

    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_contract_repayment_except_id_seq'::regclass) as id
    </selectKey>

    insert into lease_contract_repayment_except
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="repaymentId != null" >
        repayment_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="type != null" >
        type
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="repaymentId != null" >
        #{repaymentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER}
      </if>

    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.order.model.LeaseContractRepaymentExcept" >
    update lease_contract_repayment_except
    <set >
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="repaymentId != null" >
        repayment_id = #{repaymentId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.hc.lease.order.model.LeaseContractRepaymentExcept" >
    update lease_contract_repayment_except
    set contract_id = #{contractId,jdbcType=BIGINT},
      repayment_id = #{repaymentId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>