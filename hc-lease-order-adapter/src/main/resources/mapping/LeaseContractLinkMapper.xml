<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.order.dao.LeaseContractLinkMapper">
    <!--融租合同 挂靠,租期结束且融租合同贷后管理登记为挂靠-->
    <resultMap id="BaseResultMap" type="com.hc.lease.order.model.LeaseContractLink">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="contract_id" property="contractId" jdbcType="BIGINT"/>
        <result column="totle_price" property="totlePrice" jdbcType="NUMERIC"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
        <result column="repayment_date" property="repaymentDate" jdbcType="INTEGER"/>

        <result column="account_id" property="accountId" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, contract_id, totle_price, create_time, update_time, create_by, update_by, repayment_date
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from lease_contract_link
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!--融租合同的挂靠数据-->
    <select id="findAll" resultMap="BaseResultMap">
    select
    a.id, a.contract_id "contractId", a.totle_price "totlePrice", a.repayment_date "repaymentDate"
    c.id "accountId"
    from lease_contract_link a
    INNER JOIN lease_contract b on a.contract_id = b.id
    INNER JOIN lease_scheme_order_account c on c.scheme_order_id = b.scheme_order_id and is_default_pay = 1
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from lease_contract_link
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.hc.lease.order.model.LeaseContractLink">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_contract_link_id_seq'::regclass) as id
        </selectKey>
        insert into lease_contract_link (id, contract_id, totle_price,
        create_time, update_time, create_by,
        update_by, repayment_date)
        values (#{id,jdbcType=BIGINT}, #{contractId,jdbcType=BIGINT}, #{totlePrice,jdbcType=NUMERIC},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT},
        #{updateBy,jdbcType=BIGINT}, #{repaymentDate,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.hc.lease.order.model.LeaseContractLink">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_contract_link_id_seq'::regclass) as id
        </selectKey>
        insert into lease_contract_link
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="contractId != null">
                contract_id,
            </if>
            <if test="totlePrice != null">
                totle_price,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="repaymentDate != null">
                repayment_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=BIGINT},
            </if>
            <if test="totlePrice != null">
                #{totlePrice,jdbcType=NUMERIC},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="repaymentDate != null">
                #{repaymentDate,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.order.model.LeaseContractLink">
        update lease_contract_link
        <set>
            <if test="contractId != null">
                contract_id = #{contractId,jdbcType=BIGINT},
            </if>
            <if test="totlePrice != null">
                totle_price = #{totlePrice,jdbcType=NUMERIC},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="repaymentDate != null">
                repayment_date = #{repaymentDate,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.hc.lease.order.model.LeaseContractLink">
    update lease_contract_link
    set contract_id = #{contractId,jdbcType=BIGINT},
      totle_price = #{totlePrice,jdbcType=NUMERIC},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      repayment_date = #{repaymentDate,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>