<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.user.dao.LeaseAuthoUserRoleMapper">
    <!-- 用户对应的角色 -->
    <resultMap id="BaseResultMap" type="com.hc.lease.user.model.LeaseAuthoUserRole">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="role_id" property="roleId" jdbcType="BIGINT"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, user_id, role_id, type
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from lease_autho_user_role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from lease_autho_user_role
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <delete id="deleteByUserId" parameterType="java.lang.Long">
        delete from lease_autho_user_role
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>

    <!-- 批量添加 -->
    <insert id="insertList">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_autho_user_role_id_seq'::regclass) as id
        </selectKey>
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into lease_autho_user_role (user_id, role_id, type)
            values
            (
            #{item.userId},#{item.roleId},#{item.type}
            )
        </foreach>
    </insert>

    <insert id="insert" parameterType="com.hc.lease.user.model.LeaseAuthoUserRole">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_autho_user_role_id_seq'::regclass) as id
        </selectKey>
        insert into lease_autho_user_role (id, user_id, role_id, type)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.hc.lease.user.model.LeaseAuthoUserRole">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_autho_user_role_id_seq'::regclass) as id
        </selectKey>
        insert into lease_autho_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.user.model.LeaseAuthoUserRole">
        update lease_autho_user_role
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.hc.lease.user.model.LeaseAuthoUserRole">
    update lease_autho_user_role
    set user_id = #{userId,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>