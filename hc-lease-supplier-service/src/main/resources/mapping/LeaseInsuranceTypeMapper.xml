<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.supplier.dao.LeaseInsuranceTypeMapper" >
  <resultMap id="BaseResultMap" type="com.hc.lease.supplier.model.LeaseInsuranceType" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="insurance_company_id" property="insuranceCompanyId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_enable" property="isEnable" jdbcType="BIT" />
    <result column="type" property="type" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, number, insurance_company_id, name, create_time, update_time, create_by, update_by, 
    sort, is_enable,type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lease_insurance_type
    where id = #{id,jdbcType=BIGINT}
  </select>


  <select id="findByInsuranceCompanyId" resultMap="BaseResultMap">
    select
    id,number
    from lease_insurance_type
    where insurance_company_id in
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="findPage" resultType="java.util.Map">
    select
     it.id, it.number, it.insurance_company_id as "insuranceCompanyId", it.name, it.create_time as "createTime", it.update_time as "updateTime", it.create_by as "createBy", it.update_by as "updateBy",
    it.sort, it.is_enable as "isEnable",it.type,ic.name as "companyName",
    CASE
    when it.type=0 then '交强险'
    else '商业险' end as "typeName"
    from lease_insurance_type it
    join lease_insurance_company ic on it.insurance_company_id=ic.id
    where 1=1
    <if test="name != null" >
      and  it.name like CONCAT('%',#{name},'%')
    </if>
    ORDER BY it.create_time DESC
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lease_insurance_type
  </select>

  <select id="insertViewParames" resultType="java.util.Map">
    select
   id, number,name
    from lease_insurance_company
  </select>


  <delete id="deleteBatchById" parameterType="long">
    delete from lease_insurance_type where id in
    <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lease_insurance_type
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hc.lease.supplier.model.LeaseInsuranceType" >
    insert into lease_insurance_type (id, number, insurance_company_id, 
      name, create_time, update_time, 
      create_by, update_by, sort, 
      is_enable)
    values (#{id,jdbcType=BIGINT}, #{number,jdbcType=VARCHAR}, #{insuranceCompanyId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, #{sort,jdbcType=INTEGER}, 
      #{isEnable,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.hc.lease.supplier.model.LeaseInsuranceType" >
    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_insurance_type_id_seq'::regclass) as id
    </selectKey>
    insert into lease_insurance_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="insuranceCompanyId != null" >
        insurance_company_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="type != null" >
       type
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="insuranceCompanyId != null" >
        #{insuranceCompanyId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.supplier.model.LeaseInsuranceType" >
    update lease_insurance_type
    <set >
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="insuranceCompanyId != null" >
        insurance_company_id = #{insuranceCompanyId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="type != null" >
        type= #{type,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hc.lease.supplier.model.LeaseInsuranceType" >
    update lease_insurance_type
    set number = #{number,jdbcType=VARCHAR},
      insurance_company_id = #{insuranceCompanyId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      sort = #{sort,jdbcType=INTEGER},
      is_enable = #{isEnable,jdbcType=BIT},
       type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>