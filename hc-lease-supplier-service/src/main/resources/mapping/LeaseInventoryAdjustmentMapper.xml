<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.supplier.dao.LeaseInventoryAdjustmentMapper" >
  <resultMap id="BaseResultMap" type="com.hc.lease.supplier.model.LeaseInventoryAdjustment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="car_id" property="carId" jdbcType="BIGINT" />
    <result column="adjustment_time" property="adjustmentTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="BIGINT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="out_storehouse_id" property="outStorehouseId" jdbcType="BIGINT" />
    <result column="in_storehouse_id" property="inStorehouseId" jdbcType="BIGINT" />
    <result column="in_account_id" property="inAccountId" jdbcType="BIGINT" />
    <result column="out_account_id" property="outAccountId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, car_id, create_time, update_time, create_by, update_by, sort, out_storehouse_id, 
    in_storehouse_id, in_account_id, out_account_id,adjustment_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lease_inventory_adjustment
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findPage" resultType="java.util.Map">
    select
    a.id ,a.car_id as "carId", a.create_by as "createBy", a.update_by as "updateBy", a.out_storehouse_id as "outStorehouseId",ls.name as "outStorehouseName",
    a.in_storehouse_id as "inStorehouseId",s.name as "inStorehouseName",a.in_account_id as "inAccountId", a.out_account_id as "outAccountId",a.adjustment_time as "adjustmentTime",
    s.belong_type as "inBelongType",ls.belong_type as "outBelongType",bc.name as "inBranchCompanyName",d.name as "inDealerName",lbc.name as "outBranchCompanyName",ld.name as "outDealerName",
    s.belong_id as "inBelongId",ls.belong_id as "outBelongId",
    case when  s.belong_type=0 then bc.name
    else d.name end  as "inBelongName",
    case when  ls.belong_type=0 then lbc.name
    else ld.name end as "outBelongName"
    from lease_inventory_adjustment a
    join lease_storehouse s on a.in_storehouse_id=s.id
    join lease_storehouse ls on a.out_storehouse_id=ls.id
    left join lease_branch_company bc on s.belong_id=bc.id
    left join lease_dealer d on s.belong_id=d.id
    left join lease_branch_company lbc on ls.belong_id=lbc.id
    left join lease_dealer ld on ls.belong_id=ld.id
    ORDER BY a.create_time DESC
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lease_inventory_adjustment ORDER BY create_time DESC
  </select>

  <select id="insertViewParames" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from lease_inventory_adjustment ORDER BY create_time DESC
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lease_inventory_adjustment
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteBatchById" parameterType="long">
    delete from lease_inventory_adjustment where id in
    <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.hc.lease.supplier.model.LeaseInventoryAdjustment" >
    insert into lease_inventory_adjustment (id, car_id, create_time, 
      update_time, create_by, update_by, 
      sort, out_storehouse_id, in_storehouse_id, 
      in_account_id, out_account_id,adjustment_time)
    values (#{id,jdbcType=BIGINT}, #{carId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, 
      #{sort,jdbcType=INTEGER}, #{outStorehouseId,jdbcType=BIGINT}, #{inStorehouseId,jdbcType=BIGINT}, 
      #{inAccountId,jdbcType=BIGINT}, #{outAccountId,jdbcType=BIGINT}, #{adjustmentTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hc.lease.supplier.model.LeaseInventoryAdjustment" >
    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_inventory_adjustment_id_seq'::regclass) as id
    </selectKey>
    insert into lease_inventory_adjustment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
      <if test="adjustmentTime != null" >
        adjustment_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="outStorehouseId != null" >
        out_storehouse_id,
      </if>
      <if test="inStorehouseId != null" >
        in_storehouse_id,
      </if>
      <if test="inAccountId != null" >
        in_account_id,
      </if>
      <if test="outAccountId != null" >
        out_account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=BIGINT},
      </if>
      <if test="adjustmentTime != null" >
        #{adjustmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="outStorehouseId != null" >
        #{outStorehouseId,jdbcType=BIGINT},
      </if>
      <if test="inStorehouseId != null" >
        #{inStorehouseId,jdbcType=BIGINT},
      </if>
      <if test="inAccountId != null" >
        #{inAccountId,jdbcType=BIGINT},
      </if>
      <if test="outAccountId != null" >
        #{outAccountId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.supplier.model.LeaseInventoryAdjustment" >
    update lease_inventory_adjustment
    <set >
      <if test="carId != null" >
        car_id = #{carId,jdbcType=BIGINT},
      </if>
      <if test="adjustmentTime != null" >
        adjustment_time =#{adjustmentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="outStorehouseId != null" >
        out_storehouse_id = #{outStorehouseId,jdbcType=BIGINT},
      </if>
      <if test="inStorehouseId != null" >
        in_storehouse_id = #{inStorehouseId,jdbcType=BIGINT},
      </if>
      <if test="inAccountId != null" >
        in_account_id = #{inAccountId,jdbcType=BIGINT},
      </if>
      <if test="outAccountId != null" >
        out_account_id = #{outAccountId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hc.lease.supplier.model.LeaseInventoryAdjustment" >
    update lease_inventory_adjustment
    set car_id = #{carId,jdbcType=BIGINT},
      adjustment_time = #{adjustmentTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      sort = #{sort,jdbcType=INTEGER},
      out_storehouse_id = #{outStorehouseId,jdbcType=BIGINT},
      in_storehouse_id = #{inStorehouseId,jdbcType=BIGINT},
      in_account_id = #{inAccountId,jdbcType=BIGINT},
      out_account_id = #{outAccountId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>