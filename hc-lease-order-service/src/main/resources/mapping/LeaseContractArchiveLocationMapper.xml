<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.order.dao.LeaseContractArchiveLocationMapper" >
  <resultMap id="BaseResultMap" type="com.hc.lease.order.model.LeaseContractArchiveLocation" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="contract_id" property="contractId" jdbcType="BIGINT" />
    <result column="archive_location_id" property="archiveLocationId" jdbcType="BIGINT" />
    <result column="archive_number" property="archiveNumber" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="archive_location_name" property="archiveLocationName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, contract_id, archive_location_id, archive_number,level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lease_contract_archive_location
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByContractId" resultMap="BaseResultMap" parameterType="java.lang.Long">
  select cal.contract_id,cal.archive_location_id,cal.archive_number,cal.level,al.name as "archiveLocationName"
   from lease_contract_archive_location cal
   join lease_archive_location al on cal.archive_location_id=al.id
  where cal.contract_id= #{id,jdbcType=BIGINT}
  </select>


  <select id="findPage" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from lease_contract_archive_location

  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from lease_contract_archive_location
  </select>

  <select id="insertViewParames" resultType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from lease_contract_archive_location
  </select>

  <delete id="deleteBatchById" parameterType="long">
    delete from lease_contract_archive_location where id in
    <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>


  <delete id="deleteByContractId"  parameterType="java.lang.Long">
  delete from lease_contract_archive_location
    where contract_id = #{id,jdbcType=BIGINT}
  </delete>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lease_contract_archive_location
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hc.lease.order.model.LeaseContractArchiveLocation" >
    insert into lease_contract_archive_location (id, contract_id, archive_location_id, 
      archive_number,level)
    values (#{id,jdbcType=BIGINT}, #{contractId,jdbcType=BIGINT}, #{archiveLocationId,jdbcType=BIGINT}, 
      #{archiveNumber,jdbcType=VARCHAR},#{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hc.lease.order.model.LeaseContractArchiveLocation" >
    <selectKey keyProperty="id" resultType="Long" order="BEFORE">
      SELECT nextval('lease_contract_archive_location_id_seq'::regclass) as id
    </selectKey>
    insert into lease_contract_archive_location
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="archiveLocationId != null" >
        archive_location_id,
      </if>
      <if test="archiveNumber != null" >
        archive_number,
      </if>
      <if test="level != null" >
        level
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="archiveLocationId != null" >
        #{archiveLocationId,jdbcType=BIGINT},
      </if>
      <if test="archiveNumber != null" >
        #{archiveNumber,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.order.model.LeaseContractArchiveLocation" >
    update lease_contract_archive_location
    <set >
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="archiveLocationId != null" >
        archive_location_id = #{archiveLocationId,jdbcType=BIGINT},
      </if>
      <if test="archiveNumber != null" >
        archive_number = #{archiveNumber,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hc.lease.order.model.LeaseContractArchiveLocation" >
    update lease_contract_archive_location
    set contract_id = #{contractId,jdbcType=BIGINT},
      archive_location_id = #{archiveLocationId,jdbcType=BIGINT},
      archive_number = #{archiveNumber,jdbcType=VARCHAR},
      level=#{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>