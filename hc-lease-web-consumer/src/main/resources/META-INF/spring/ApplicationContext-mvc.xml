<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd">

    <mvc:default-servlet-handler/>
    <context:component-scan base-package="com.hc.lease"/>
    <mvc:annotation-driven/>

    <!-- 启动对@AspectJ注解的支持 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!-- static resource  restful-->
    <!--
    <mvc:resources mapping="/static/js/**" location="/static/js/"/>
    <mvc:resources mapping="/static/plugins/**" location="/static/plugins/"/>
    <mvc:resources mapping="/static/uploadFiles/**" location="/static/uploadFiles/"/>
    <mvc:resources mapping="/WEB-INF/jsp/**" location="/WEB-INF/jsp/"/>
    -->


    <!--SpringMVC view -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- spring upload  -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
        <property name="defaultEncoding">
            <value>utf-8</value>
        </property>
    </bean>

    <!--json data-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="hc.lease.common.util.DateConverter"/>
            </set>
        </property>
    </bean>

    <import resource="classpath*:META-INF/spring/ApplicationContext-core.xml"/>

    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html; charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <!--json null-->
                <property name="objectMapper">
                    <bean class="hc.lease.common.util.NotNullReturnMapper"></bean>
                </property>
            </bean>
        </mvc:message-converters>
        <!--HandlerMethodArgumentResolver-->
        <mvc:argument-resolvers>
            <bean class="com.hc.lease.common.core.aop.CurrentUserHandlerMethodArgumentResolver"/>
            <bean class="com.hc.lease.common.core.aop.DubboTreaceParamesHandlerMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>


    <!-- Enables swgger ui-->
    <!--<bean class="com.gude.config.SwaggerConfig" /> -->
    <bean class="com.hc.lease.common.core.swagger.SwaggerConfig"/>
    <context:component-scan base-package="com.hc.lease.common.core.swagger"/>
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <!--
    <mvc:interceptors>

        <mvc:interceptor>
            <mvc:mapping path="/api/admin/**"/>
            <bean class="com.hc.lease.user.interceptor.UserInterceptor"/>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/api/admin_public/**"/>
            <bean class="com.hc.lease.user.interceptor.UserPublicInterceptor"/>
        </mvc:interceptor>

    </mvc:interceptors>
    -->

</beans>
