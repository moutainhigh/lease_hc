<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.lease.baseInfo.dao.LeaseDictMapper">
    <!--字典表-->
    <resultMap id="BaseResultMap" type="com.hc.lease.baseInfo.model.LeaseDict">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="parent_id" property="parentId" jdbcType="VARCHAR"/>
        <result column="label" property="label" jdbcType="VARCHAR"/>
        <result column="value" property="value" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="marked_graph" property="markedGraph" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_enable" property="isEnable" jdbcType="BIT"/>
        <result column="data_versions" property="dataVersions" jdbcType="INTEGER"/>
        <result column="default_selected" property="defaultSelected" jdbcType="BIT"/>
        <result column="number" property="number" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, parent_id, label, value, type, description, marked_graph, sort, create_by, create_time,
    update_by, update_time, is_enable,default_selected,number
  </sql>

    <!--导出车辆录入模板需要的数据-->
    <select id="findExportExcelModel" resultType="java.lang.String">
        select value "name" from lease_dict where type = #{type,jdbcType=VARCHAR}
    </select>

    <select id="findByValueAndType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lease_dict
        where 1=1
        and type = #{type}
        and value = #{name}
    </select>

    <select id="findAllValid" resultMap="BaseResultMap">
        select id,label,value,type,data_versions,number
        from lease_dict
        where is_enable = 't'
    </select>

    <select id="findAllValidType" resultType="java.lang.String">
        select type
        from lease_dict
        where is_enable = 't'
        group by type
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from lease_dict
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findByType" resultType="java.util.Map" parameterType="java.lang.String">
        select
        id, value "name", label,is_enable "isEnable",default_selected "defaultSelected",number,sort
        from lease_dict
        where type = #{type,jdbcType=VARCHAR}
        order by sort asc
    </select>

    <select id="findPage" resultType="java.util.Map">
        select
        id, parent_id "parentId", label, value, type, description, marked_graph "markedGraph", is_enable "isEnable",default_selected "defaultSelected",sort,
        number
        from lease_dict
        where 1=1
        <if test="type != null"  >
            and  type = #{type}
        </if>
        <if test="name != null">
            and value like concat('%',#{name},'%')
        </if>
        <if test="number != null">
            and number =#{number}
        </if>
        <if test="isEnable != null"  >
            and  is_enable = #{isEnable}
        </if>
        <if test="defaultSelected != null"  >
            and  default_selected = #{defaultSelected}
        </if>
        ORDER BY sort asc
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lease_dict ORDER BY create_time DESC
    </select>

    <select id="findMaxNumber" resultType="java.lang.Integer" parameterType="java.lang.String">
        select max(number)  from lease_dict where type=#{type}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from lease_dict
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <!-- 批量删除 -->
    <delete id="deleteBatchById" parameterType="long">
        delete from lease_dict where id in
        <foreach item="idItem" collection="list" open="(" separator="," close=")">
            #{idItem}
        </foreach>
    </delete>


    <update id="disableByPrimaryKey" parameterType="java.util.Map">
        update lease_dict set is_enable = #{isEnable,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateDefaultSelected" parameterType="java.util.Map">
        update lease_dict set default_selected = #{defaultSelected,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateSort" parameterType="java.util.Map">
        update lease_dict set sort =#{mark}
        where id=#{id}
    </update>


    <insert id="insert" parameterType="com.hc.lease.baseInfo.model.LeaseDict">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_dict_id_seq'::regclass) as id
        </selectKey>
        insert into lease_dict (id, parent_id, label,
        value, type, description,
        marked_graph, sort, create_by,
        create_time, update_by, update_time,
        is_enable,default_selected,number)
        values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR},
        #{value,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{markedGraph,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{createBy,jdbcType=BIGINT},
        #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
        #{isEnable,jdbcType=BIT}, #{defaultSelected,jdbcType=BIT}, #{number,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.hc.lease.baseInfo.model.LeaseDict">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT nextval('lease_dict_id_seq'::regclass) as id
        </selectKey>
        insert into lease_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="label != null">
                label,
            </if>
            <if test="value != null">
                value,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="markedGraph != null">
                marked_graph,
            </if>
            <if test="id != null">
                sort,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isEnable != null">
                is_enable,
            </if>
            <if test="defaultSelected != null">
                default_selected,
            </if>
            <if test="number != null">
                number
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                #{label,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="markedGraph != null">
                #{markedGraph,jdbcType=VARCHAR},
            </if>
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                #{isEnable,jdbcType=BIT},
            </if>
            <if test="defaultSelected != null">
            #{defaultSelected,jdbcType=BIT},
            </if>
            <if test="number != null">
                #{number,jdbcType=INTEGER}
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.hc.lease.baseInfo.model.LeaseDict">
        update lease_dict
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                value = #{value,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="markedGraph != null">
                marked_graph = #{markedGraph,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable,jdbcType=BIT},
            </if>
            <if test="defaultSelected != null">
                default_selected = #{defaultSelected,jdbcType=BIT},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.hc.lease.baseInfo.model.LeaseDict">
    update lease_dict
    set parent_id = #{parentId,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      marked_graph = #{markedGraph,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_enable = #{isEnable,jdbcType=BIT},
      default_selected = #{defaultSelected,jdbcType=BIT},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>